class HotelAccommodation(models.Model):
    """
    Manage hotel guest stays, room status, payments, and related operations.
    """

    def _compute_invoice_count(self):
        """Compute the number of invoices linked to this accommodation."""
        ...

    def action_view_invoices(self):
        """Open invoices related to this accommodation."""
        ...

    def _compute_food_order_count(self):
        """Compute the number of food orders for this accommodation."""
        ...

    def action_view_food_orders(self):
        """Open food orders related to this accommodation."""
        ...

    def action_archive_accommodation(self):
        """Archive cancelled accommodations older than two days."""
        ...

    @api.model
    def action_send_checkout_email(self):
        """Send checkout reminder email to guests whose expected date is today."""
        ...

    @api.depends('check_out', 'expected_date','room_status')
    def _compute_expected_date_color(self):
        """Set color indicator for expected checkout date (yellow/today, red/past)."""
        ...

    @api.depends('order_list_ids.total')
    def _compute_food_total(self):
        """Compute total food cost from order lines."""
        ...

    @api.depends('check_in', 'check_out', 'rooms_id.rent','payment_id.total')
    def _compute_total_rent(self):
        """Compute total rent based on check-in/check-out dates and room rent."""
        ...

    @api.depends('payment_line_ids.total')
    def _compute_total_amount(self):
        """Compute total amount including rent, food, and other payment lines."""
        ...

    @api.depends('facility_ids', 'bed')
    def _compute_filtered_rooms(self):
        """Filter rooms based on bed type, facilities, and availability."""
        ...

    @api.depends('expected_days', 'check_in','room_status')
    def _compute_expected_date(self):
        """Calculate expected checkout date from check-in and expected days."""
        ...

    @api.constrains('number_of_guests')
    def guest_numbers(self):
        """Ensure number_of_guests matches total guests entered."""
        ...

    def write(self, vals):
        """Write values and validate guest numbers."""
        ...

    def create(self, vals):
        """Create accommodation record with a unique reference number."""
        ...

    def action_check_in(self):
        """Check-in guest, mark room unavailable, and record room rent."""
        ...

    def action_check_out(self):
        """Check-out guest, calculate rent, mark room available, and create invoice."""
        ...

    def action_cancel(self):
        """Cancel accommodation and record cancellation datetime."""
        ...
